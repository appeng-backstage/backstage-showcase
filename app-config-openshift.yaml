app:
  title: Backstage App
  baseUrl: http://localhost:3000

organization:
  name: AppEng-Backstage

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  auth:
    keys:
      - secret: temp
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
      client: pg
      connection:
        host: ${POSTGRES_HOST}
        port: ${POSTGRES_PORT}
        user: ${POSTGRES_USER}
        password: ${POSTGRESQL_ADMIN_PASSWORD}

auth:
  environment: development
  providers:
    github:
      development:
        clientId:
        clientSecret:

proxy:

 '/quay/api':
   target: 'https://quay.io'
   headers:
     X-Requested-With: 'XMLHttpRequest'
     # Uncomment the following line to access a private Quay Repository using a token
     # Authorization: 'Bearer <YOUR TOKEN>'
   changeOrigin: true
   # Change to "false" in case of using self hosted quay instance with a self-signed certificate
   secure: true
integrations:
  github:
    - host: github.com
      token:

techdocs:
  builder: external
  generator:
    runIn: local

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, Group, User, Resource, Location, Template, API]
  locations:
    # Note: integrations.github[].apps must be correctly configured to read GitHub locations
    - type: url
      target: https://github.com/janus-idp/backstage-showcase/blob/main/catalog-entities/all.yaml

    - type: url
      target: https://github.com/janus-idp/software-templates/blob/main/showcase-templates.yaml

  providers:
    # Plugin: GitHub Org Data
    githubOrg:
      default:
        id: development
        orgUrl: https://github.com/RHEcosystemAppEng

# Plugin: Kubernetes, OCM
kubernetes:
  customResources:
    - group: 'tekton.dev'
      apiVersion: 'v1beta1'
      plural: 'pipelines'
    - group: 'tekton.dev'
      apiVersion: 'v1beta1'
      plural: 'pipelineruns'
    - group: 'tekton.dev'
      apiVersion: 'v1beta1'
      plural: 'taskruns'
    - group: 'route.openshift.io'
      apiVersion: 'v1'
      plural: 'routes'
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - name: backstage-showcase
          url:
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          serviceAccountToken:

# Plugin: ArgoCD
argocd:
  username: admin
  password: 4EI0qCsyYeNA5r7KmdQvpFXzHRStLx2j
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: argoInstance1
          url:
          token:


enabled:
  kubernetes: true
  techdocs: ${TECHDOCS_ENABLED}
  argocd: true
  sonarqube: ${SONARQUBE_ENABLED}
  keycloak: false
  ocm: ${OCM_ENABLED}
  github: true
  githubOrg: true
  gitlab: ${GITLAB_ENABLED}
  azureDevOps: ${AZURE_ENABLED}
  jenkins: ${JENKINS_ENABLED}
  permission: false
  metrics: ${METRICS_ENABLED}
  aap: ${AAP_ENABLED}
